---
title: "Cartography with R - Exercises"
description: "Create reproducible maps with R"
author:
  - name: Timothée Giraud
    orcid: 0000-0001-5679-6536
    url: https://rcarto.github.io
    affiliation:
        name: Center for Spatial Analysis and Geovizualization
        url: https://riate.cnrs.fr
        department: UAR RIATE
        group: CNRS
date: today
date-format: long
toc: true
output-file: Exercices
output-ext: html
self-contained: true
knitr:
  opts_chunk: 
    comment: "#>" 
---

# Vector Data & Geoprocessing

## Vector Data

### sf package
Install the sf package.
```{r}
#| eval: false
install.packages("sf")
```

### Import and export
Import municipalities.
```{r}
library(sf)
st_layers(dsn = "data/lot.gpkg")
mun <- st_read("data/lot.gpkg", layer = "communes")
```

### Explore and display

1. Plot municpalities with `sf`. The filling color must be blue and borders must be thick.
```{r}
plot(st_geometry(mun), col = "lightblue", lwd = 2)
```


2. Plot municipalities with `mapsf`. The filling color must be lightgreen and borders must be white and thin.
```{r}
# install.packages("mapsf")
library(mapsf)
mf_map(mun, col = "lightgreen", border = "#ffffff", lwd = .5)
```

3. Add the restaurants to the municpalities map. 
```{r}
rest <- st_read("data/lot.gpkg", layer = "restaurants")
mf_map(mun, col = "lightgreen", border = "#ffffff", lwd = .5)
mf_map(rest, pch = 21, col = "red", cex = 1, add = TRUE)
```


4. How many municipalities are there?
```{r}
# dim(mun)[1]
nrow(mun)
# length(unique(mun$INSEE_COM))
```


5. Which commune has the largest population?
```{r}
# mun[order(mun$POPULATION, decreasing = T), 2][1, ]
mun[mun$POPULATION == max(mun$POPULATION), 2]
```



### Attribute selection and join

1. Import the **com.csv** file.
```{r}
mun_df <- read.csv("data/com.csv")
```

2. Join this dataset to the municipality layer.
```{r}
mun_final <- merge(
  x = mun, # the sf object
  y = mun_df, # the data.frame
  by = "INSEE_COM", # identifier in x and y
  all.x = TRUE # keep all lines
)
```

3. Extract municipalities with more than 500 active workers and whose share of active workers in the total population is greater than 30%.
```{r}
mun_sel <- mun_final[mun_final$ACT > 500 & mun_final$SACT > 30, ]
```

4. Plot a map with all municipalities in gray and selected municipalities in red.
```{r}
mf_map(mun_final, col = "grey40", border = 'lightblue')
mf_map(mun_sel, col = "red", add = TRUE)

```

## Geoprocessing

### Spatial selection and join
1. Import the layers of municipalities and restaurants.
```{r}
rest <- st_read("data/lot.gpkg", layer = "restaurants")
mun  <- st_read("data/lot.gpkg", layer = "communes")
```

2. Perform a spatial join to find the name and identifier of the municipality where each restaurant is located.
```{r}

resto <- st_join(x = rest, y = mun[, "INSEE_COM"], 
                 join = st_intersects,
                 left = FALSE)
resto

```


### Geometrical operations

1. Compute the number of restaurants per municipality.
```{r}
mun$n <- lengths(st_intersects(mun, resto, sparse = T))
########### OR
# resto <- st_join(x = rest, y = mun[, "INSEE_COM"], 
#                  join = st_intersects,
#                  left = FALSE)
# rest_by_mun <- aggregate(x = list(n = resto$id), 
#                          by = list(INSEE_COM = resto$INSEE_COM), 
#                          FUN = length)
# mun <- merge(mun, rest_by_mun, "INSEE_COM", all.x = TRUE)
# mun[is.na(mun$n), "n"] <- 0
```



2. Which municipalities have more than 10 restaurants and fewer than 1000 inhabitants?
```{r}
mun_sel <- mun[mun$n > 10 & mun$POPULATION < 1000, ]
```

3. Create a map showing all the municipalities in grey and the municipalities selected above in red.
```{r}
mf_map(mun_final, col = "grey40", border = 'lightblue')
mf_map(mun_sel, col = "red", add = TRUE)
```


# Cartography

## The Cartographic Language

How to represent the following variables:

* A municipal population   
**Proportional Symbols**
* A median age by region  
**Choropleth map, ordered colors**  
* A population growth rate  
**Choropleth map, ordered colors**  
* The administrative status of municipalities  
**Typologie map, unordered colors**  
* Life expectancy per country  
**Choropleth map, ordered colors**  

## mapsf

### Map Types

1. Import the **com.csv** file.
```{r}
mun_df <- read.csv("data/com.csv")
```

2. Join this dataset to the municipality layer.
```{r}
mun  <- st_read("data/lot.gpkg", layer = "communes")
mun <- merge(
  x = mun, # the sf object
  y = mun_df, # the data.frame
  by = "INSEE_COM", # identifier in x and y
  all.x = TRUE # keep all lines
)
```

3. Create a map of the working population.
```{r}
library(mapsf)
mf_map(mun, col = "ivory4", border = "ivory" , lwd = .3)
mf_map(
  x = mun  ,
  var = "ACT",
  type = "prop",
  inches = .35,
  symbol = "square",
  border = "white",
  lwd = .75,
  col = "#881094",
  leg_title = "Working Population",
  leg_pos = c(622700, 6372800)
)
mf_title("Working Population in the Lot Region")
```

4. Create a map of the share of the working population in the total population.
```{r}
mf_distr(mun$SACT)
summary(mun$SACT)
# Classification method based mean and standard deviation
bks <- mf_get_breaks(mun$SACT, breaks = "msd", central = FALSE)
# Double color palette
cols <- mf_get_pal(c(3,4), palette = c("Mint", "Burg"))

mf_map(
  x = mun,
  var = "SACT",
  type = "choro",
  breaks = bks,
  pal = cols,
  border = "ivory4",
  lwd = .2,
  leg_title = "%",
  leg_val_rnd = 0
)
mf_title("Share of the working population in the total poulation")
```

### Map Layout
1. Create a map showing the working population in the industrial sector.
2. Add the necessary layout elements.
3. Make the map more intelligible, more explicit.
4. Export the map in PNG format, 1000 pixels wide. 



**Workers + Workers in the industrial sector**
```{r}
#| fig-width: 8
#| fig-height: 4.25
dep <- st_read("data/lot.gpkg", layer = "departements", quiet = TRUE)
# Workers  + Workers in the industrial sector
par(mfrow = c(1, 2))

mf_map(x = mun, border = "white", lwd = .2, add = F)
mf_map(x = dep, lwd = 1, col = NA, add = TRUE, lend = 0)
mf_map(x = mun, var = "ACT", 
       type = "prop",
       inches=.2,
       leg_frame = T,
       leg_title = "N.")
mf_title("Working Population", tab = FALSE)
mf_credits(
  paste0("Admin Express COG Carto 3.0, IGN - 2021 & ",
         "BD CARTO® 4.0, IGN - 2021 ; Recensements harmonisés - ",
         "Séries départementales et munmunales, INSEE - 2020\n",
         "Auteurs : T. Giraud, 2025"), bg ="#ffffff80")
mf_map(x = mun, border = "white", lwd = .2, add = F)
mf_map(x = dep, lwd = 1, col = NA, add = TRUE, lend = 0)
mf_map(x = mun, var = "IND", 
       type = "prop",
       inches=.2,
       leg_frame = T,
       leg_title = "N.")
mf_title("Working Population in the Industrial Sector", tab = FALSE)
mf_scale(5)
mf_arrow(pos = "topright")
```


**Share of workers in the industrial secto**
```{r}
mf_distr(mun$SACT_IND)
summary(mun$SACT_IND)
```
2 municipalities have a 100% share of workers in the industrial sector. Both have less than 15 workers. They are outliers. 

```{r}
#| fig-width: 5
#| fig-height: 5.2
# Remove outliers
mun_sel <- mun[mun$ACT > 15, ]
mf_distr(mun_sel$SACT_IND)
summary(mun_sel$SACT_IND)
bks <- mf_get_breaks(mun_sel$SACT_IND, nbreaks = 5, breaks = "quantile")
mf_map(x = mun,
       var = "SACT_IND",
       type = "choro",
       breaks = bks,        
       leg_val_rnd = 0,      
       pal = "Red-Yellow",  
       leg_title = "%",
       add = FALSE,
       col_na = "grey",
       leg_no_data = "less than 15 workers")
mf_title("Share of workers in the industrial sector")
mf_scale(5)
mf_arrow(pos = "topright")
mf_credits(paste0("Auteurs : T. Giraud, 2025\n","Admin Express COG Carto 3.0, IGN - 2021 & ",
                  "BD CARTO® 4.0, IGN - 2021 ;\nRecensements harmonisés - ",
                  "Séries départementales et munmunales, INSEE - 2020"))
```


**Final Map**
```{r}
mf_export(x = mun, filename = "img/map.png", width = 1000, res= 120)
mf_map(x = mun, border = "white", lwd = .2, add = T)
mf_map(x = dep, lwd = 1, col = NA, add = TRUE, lend = 0)
mf_map(mun, c("ACT", "SACT_IND"), "prop_choro",
       breaks = bks,
       pal = "Red-Yellow",
       inches = .4,
       border = "white", lwd = .7,
       leg_val_rnd =  c(0,1),
       leg_pos = c(538000,6442000, 538000, 6424000), 
       leg_title = c("N. workers",
                     "Workers in the\nIndustrial Sector\n(%)"),
       col_na = "grey",
       leg_no_data = "Less than 15 workers")

# Ajout d'annotations
mf_annotation(x = mun[mun$NOM_COM=="Biars-sur-Cère",], txt = "Andros\n(jam factory)",
             halo = TRUE, cex = 1)
mf_annotation(x = mun[mun$NOM_COM=="Figeac",], txt = "Aerospace\nIndustry",
             pos = "bottomright", halo = TRUE, cex = 1)
mf_annotation(x = mun[mun$NOM_COM=="Gramat",], txt = "La Quercynoise\n(duck meat factory)",
              pos = "topleft", halo = TRUE, cex = 1)

mf_title("MECANIC VALLEE")

# inset->
mf_inset_on(fig = c(.8,0.98,0.1,0.3))
mf_map(dep, lwd = .1)
mf_map(mun, border = NA, add = TRUE, col = "#D7FF68")
box(lwd = .5)
mf_inset_off()
# <- inset
mf_scale(5)
mf_arrow("topright")
mf_credits(paste0("Auteurs : T. Giraud, 2025\n","Admin Express COG Carto 3.0, IGN - 2021 & ",
                  "BD CARTO® 4.0, IGN - 2021 ;\nRecensements harmonisés - ",
                  "Séries départementales et munmunales, INSEE - 2020"))
dev.off()
```

![](img/map.png)